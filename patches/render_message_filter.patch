diff --git a/content/browser/renderer_host/render_message_filter.cc b/content/browser/renderer_host/render_message_filter.cc
index 3843d88..0b144f9 100644
--- a/content/browser/renderer_host/render_message_filter.cc
+++ b/content/browser/renderer_host/render_message_filter.cc
@@ -257,10 +257,13 @@ void RenderMessageFilter::OnCreateWindow(
           params.opener_top_level_frame_url,
           params.opener_security_origin,
           params.window_container_type,
+          params.frame_name,
           params.target_url,
           params.referrer,
           params.disposition,
           params.features,
+          params.additional_features,
+          params.resource_request_body,
           params.user_gesture,
           params.opener_suppressed,
           resource_context_,
diff --git a/content/common/view_messages.h b/content/common/view_messages.h
index a70cb9c..662836b 100644
--- a/content/common/view_messages.h
+++ b/content/common/view_messages.h
@@ -23,6 +23,7 @@
 #include "content/common/frame_replication_state.h"
 #include "content/common/navigation_gesture.h"
 #include "content/common/resize_params.h"
+#include "content/common/resource_request_body_impl.h"
 #include "content/common/text_input_state.h"
 #include "content/common/view_message_enums.h"
 #include "content/public/common/common_param_traits.h"
@@ -332,6 +333,10 @@ IPC_STRUCT_BEGIN(ViewHostMsg_CreateWindow_Params)
   // separately from |features| above because we cannot serialize WebStrings
   // over IPC.
   IPC_STRUCT_MEMBER(std::vector<base::string16>, additional_features)
+
+  // The request body associated with POST requests.
+  IPC_STRUCT_MEMBER(scoped_refptr<content::ResourceRequestBodyImpl>,
+                    resource_request_body)
 IPC_STRUCT_END()
 
 IPC_STRUCT_BEGIN(ViewHostMsg_CreateWindow_Reply)
diff --git a/content/public/browser/content_browser_client.cc b/content/public/browser/content_browser_client.cc
index 153ad54..baf0d187 100644
--- a/content/public/browser/content_browser_client.cc
+++ b/content/public/browser/content_browser_client.cc
@@ -284,10 +284,13 @@ bool ContentBrowserClient::CanCreateWindow(
     const GURL& opener_top_level_frame_url,
     const GURL& source_origin,
     WindowContainerType container_type,
+    const std::string& frame_name,
     const GURL& target_url,
     const Referrer& referrer,
     WindowOpenDisposition disposition,
     const blink::WebWindowFeatures& features,
+    const std::vector<base::string16>& additional_features,
+    const scoped_refptr<ResourceRequestBodyImpl>& body,
     bool user_gesture,
     bool opener_suppressed,
     ResourceContext* context,
diff --git a/content/public/browser/content_browser_client.h b/content/public/browser/content_browser_client.h
index 636147c..303912f 100644
--- a/content/public/browser/content_browser_client.h
+++ b/content/public/browser/content_browser_client.h
@@ -118,6 +118,7 @@ class RenderFrameHost;
 class RenderProcessHost;
 class RenderViewHost;
 class ResourceContext;
+class ResourceRequestBodyImpl;
 class SiteInstance;
 class SpeechRecognitionManagerDelegate;
 class TracingDelegate;
@@ -141,6 +142,13 @@ class CONTENT_EXPORT ContentBrowserClient {
  public:
   virtual ~ContentBrowserClient() {}
 
+  // Electron: Allows overriding the SiteInstance when navigating.
+  virtual void OverrideSiteInstanceForNavigation(
+      BrowserContext* browser_context,
+      SiteInstance* current_instance,
+      const GURL& dest_url,
+      SiteInstance** new_instance) {}
+
   // Allows the embedder to set any number of custom BrowserMainParts
   // implementations for the browser startup code. See comments in
   // browser_main_parts.h.
@@ -511,10 +519,13 @@ class CONTENT_EXPORT ContentBrowserClient {
                                const GURL& opener_top_level_frame_url,
                                const GURL& source_origin,
                                WindowContainerType container_type,
+                               const std::string& frame_name,
                                const GURL& target_url,
                                const Referrer& referrer,
                                WindowOpenDisposition disposition,
                                const blink::WebWindowFeatures& features,
+                               const std::vector<base::string16>& additional_features,
+                               const scoped_refptr<ResourceRequestBodyImpl>& body,
                                bool user_gesture,
                                bool opener_suppressed,
                                ResourceContext* context,
diff --git a/content/renderer/render_view_impl.cc b/content/renderer/render_view_impl.cc
index be61076..af3698f 100644
--- a/content/renderer/render_view_impl.cc
+++ b/content/renderer/render_view_impl.cc
@@ -42,6 +42,7 @@
 #include "content/child/child_shared_bitmap_manager.h"
 #include "content/child/request_extra_data.h"
 #include "content/child/v8_value_converter_impl.h"
+#include "content/child/web_url_request_util.h"
 #include "content/child/webmessageportchannel_impl.h"
 #include "content/common/content_constants_internal.h"
 #include "content/common/content_switches_internal.h"
@@ -1503,6 +1504,7 @@ WebView* RenderViewImpl::createView(WebLocalFrame* creator,
   params.opener_render_frame_id =
       RenderFrameImpl::FromWebFrame(creator)->GetRoutingID();
   params.opener_url = creator->document().url();
+  params.resource_request_body = GetRequestBodyForWebURLRequest(request);
 
   // The browser process uses the top frame's URL for a content settings check
   // to determine whether the popup is allowed.  If the top frame is remote,
