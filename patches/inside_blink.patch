Index: third_party/WebKit/public/platform/WebAnimation.h
===================================================================
--- third_party/WebKit/public/platform/WebAnimation.h	(revision 177902)
+++ third_party/WebKit/public/platform/WebAnimation.h	(working copy)
@@ -29,7 +29,7 @@
 #include "WebNonCopyable.h"
 #include "WebPrivateOwnPtr.h"
 
-#if BLINK_IMPLEMENTATION
+#if INSIDE_BLINK
 #include "wtf/Forward.h"
 #endif
 
Index: third_party/WebKit/public/platform/WebDragData.h
===================================================================
--- third_party/WebKit/public/platform/WebDragData.h	(revision 177902)
+++ third_party/WebKit/public/platform/WebDragData.h	(working copy)
@@ -108,7 +108,7 @@
     BLINK_EXPORT WebString filesystemId() const;
     BLINK_EXPORT void setFilesystemId(const WebString&);
 
-#if BLINK_IMPLEMENTATION
+#if INSIDE_BLINK
     explicit WebDragData(const PassRefPtrWillBeRawPtr<WebCore::DataObject>&);
     WebDragData& operator=(const PassRefPtrWillBeRawPtr<WebCore::DataObject>&);
     WebCore::DataObject* getValue() const;
Index: third_party/WebKit/public/platform/WebGamepad.h
===================================================================
--- third_party/WebKit/public/platform/WebGamepad.h	(revision 177902)
+++ third_party/WebKit/public/platform/WebGamepad.h	(working copy)
@@ -26,7 +26,7 @@
 
 #include "WebCommon.h"
 
-#if BLINK_IMPLEMENTATION
+#if INSIDE_BLINK
 #include "wtf/Assertions.h"
 #endif
 
@@ -96,7 +96,7 @@
     WebUChar mapping[mappingLengthCap];
 };
 
-#if BLINK_IMPLEMENTATION
+#if INSIDE_BLINK
 COMPILE_ASSERT(sizeof(WebGamepad) == 529, WebGamepad_has_wrong_size);
 #endif
 
Index: third_party/WebKit/public/platform/WebGamepads.h
===================================================================
--- third_party/WebKit/public/platform/WebGamepads.h	(revision 177902)
+++ third_party/WebKit/public/platform/WebGamepads.h	(working copy)
@@ -26,7 +26,7 @@
 
 #include "WebGamepad.h"
 
-#if BLINK_IMPLEMENTATION
+#if INSIDE_BLINK
 #include "wtf/Assertions.h"
 #endif
 
@@ -51,7 +51,7 @@
     WebGamepad items[itemsLengthCap];
 };
 
-#if BLINK_IMPLEMENTATION
+#if INSIDE_BLINK
 COMPILE_ASSERT(sizeof(WebGamepads) == 2120, WebGamepads_has_wrong_size);
 #endif
 
Index: third_party/WebKit/public/platform/WebIDBDatabaseError.h
===================================================================
--- third_party/WebKit/public/platform/WebIDBDatabaseError.h	(revision 177902)
+++ third_party/WebKit/public/platform/WebIDBDatabaseError.h	(working copy)
@@ -54,7 +54,7 @@
     BLINK_EXPORT void assign(const WebIDBDatabaseError&);
     BLINK_EXPORT void reset();
 
-#if BLINK_IMPLEMENTATION
+#if INSIDE_BLINK
     operator PassRefPtrWillBeRawPtr<WebCore::DOMError>() const;
 #endif
 
Index: third_party/WebKit/public/platform/WebIDBKey.h
===================================================================
--- third_party/WebKit/public/platform/WebIDBKey.h	(revision 177902)
+++ third_party/WebKit/public/platform/WebIDBKey.h	(working copy)
@@ -76,7 +76,7 @@
     BLINK_EXPORT double date() const; // Only valid for DateType.
     BLINK_EXPORT double number() const; // Only valid for NumberType.
 
-#if BLINK_IMPLEMENTATION
+#if INSIDE_BLINK
     WebIDBKey(const PassRefPtrWillBeRawPtr<WebCore::IDBKey>&);
     WebIDBKey& operator=(const PassRefPtrWillBeRawPtr<WebCore::IDBKey>&);
     operator PassRefPtrWillBeRawPtr<WebCore::IDBKey>() const;
Index: third_party/WebKit/public/platform/WebIDBKeyPath.h
===================================================================
--- third_party/WebKit/public/platform/WebIDBKeyPath.h	(revision 177902)
+++ third_party/WebKit/public/platform/WebIDBKeyPath.h	(working copy)
@@ -58,7 +58,7 @@
     BLINK_EXPORT WebVector<WebString> array() const; // Only valid for ArrayType.
     BLINK_EXPORT WebString string() const; // Only valid for StringType.
 
-#if BLINK_IMPLEMENTATION
+#if INSIDE_BLINK
     WebIDBKeyPath(const WebCore::IDBKeyPath&);
     WebIDBKeyPath& operator=(const WebCore::IDBKeyPath&);
     operator const WebCore::IDBKeyPath&() const;
Index: third_party/WebKit/public/platform/WebIDBKeyRange.h
===================================================================
--- third_party/WebKit/public/platform/WebIDBKeyRange.h	(revision 177902)
+++ third_party/WebKit/public/platform/WebIDBKeyRange.h	(working copy)
@@ -52,7 +52,7 @@
     BLINK_EXPORT void assign(const WebIDBKey& lower, const WebIDBKey& upper, bool lowerOpen, bool upperOpen);
     BLINK_EXPORT void reset();
 
-#if BLINK_IMPLEMENTATION
+#if INSIDE_BLINK
     WebIDBKeyRange(const PassRefPtrWillBeRawPtr<WebCore::IDBKeyRange>&);
     WebIDBKeyRange& operator=(const PassRefPtrWillBeRawPtr<WebCore::IDBKeyRange>&);
     operator PassRefPtrWillBeRawPtr<WebCore::IDBKeyRange>() const;
Index: third_party/WebKit/public/platform/WebIDBMetadata.h
===================================================================
--- third_party/WebKit/public/platform/WebIDBMetadata.h	(revision 177902)
+++ third_party/WebKit/public/platform/WebIDBMetadata.h	(working copy)
@@ -80,7 +80,7 @@
             , multiEntry(false) { }
     };
 
-#if BLINK_IMPLEMENTATION
+#if INSIDE_BLINK
     WebIDBMetadata(const WebCore::IDBDatabaseMetadata&);
     operator WebCore::IDBDatabaseMetadata() const;
 #endif
Index: third_party/WebKit/public/platform/WebRTCSessionDescription.h
===================================================================
--- third_party/WebKit/public/platform/WebRTCSessionDescription.h	(revision 177902)
+++ third_party/WebKit/public/platform/WebRTCSessionDescription.h	(working copy)
@@ -75,7 +75,7 @@
     BLINK_PLATFORM_EXPORT WebString sdp() const;
     BLINK_PLATFORM_EXPORT void setSDP(const WebString&);
 
-#if BLINK_IMPLEMENTATION
+#if INSIDE_BLINK
     WebRTCSessionDescription(WebString type, WebString sdp)
     {
         this->initialize(type, sdp);
Index: third_party/WebKit/public/platform/WebScrollbarThemePainter.h
===================================================================
--- third_party/WebKit/public/platform/WebScrollbarThemePainter.h	(revision 177902)
+++ third_party/WebKit/public/platform/WebScrollbarThemePainter.h	(working copy)
@@ -62,7 +62,7 @@
     BLINK_EXPORT void paintTickmarks(WebCanvas*, const WebRect&);
     BLINK_EXPORT void paintThumb(WebCanvas*, const WebRect&);
 
-#if BLINK_IMPLEMENTATION
+#if INSIDE_BLINK
     WebScrollbarThemePainter(WebCore::ScrollbarTheme*, WebCore::Scrollbar*);
 #endif
 
Index: third_party/WebKit/public/platform/WebWorkerRunLoop.h
===================================================================
--- third_party/WebKit/public/platform/WebWorkerRunLoop.h	(revision 177902)
+++ third_party/WebKit/public/platform/WebWorkerRunLoop.h	(working copy)
@@ -46,7 +46,7 @@
     BLINK_EXPORT bool equals(const WebWorkerRunLoop&) const;
     BLINK_EXPORT bool lessThan(const WebWorkerRunLoop&) const;
 
-#if BLINK_IMPLEMENTATION
+#if INSIDE_BLINK
     WebWorkerRunLoop(WebCore::WorkerRunLoop*);
 #endif
 
Index: third_party/WebKit/public/platform/linux/WebFontRenderStyle.h
===================================================================
--- third_party/WebKit/public/platform/linux/WebFontRenderStyle.h	(revision 177902)
+++ third_party/WebKit/public/platform/linux/WebFontRenderStyle.h	(working copy)
@@ -50,7 +50,7 @@
     char useSubpixelRendering; // use subpixel rendering (partially-filled pixels)
     char useSubpixelPositioning; // use subpixel positioning (fractional X positions for glyphs)
 
-#if BLINK_IMPLEMENTATION || BLINK_PLATFORM_IMPLEMENTATION
+#if INSIDE_BLINK || BLINK_PLATFORM_IMPLEMENTATION
     // Translates the members of this struct to a FontRenderStyle
     void toFontRenderStyle(WebCore::FontRenderStyle*);
 #endif
Index: third_party/WebKit/public/web/WebAXObject.h
===================================================================
--- third_party/WebKit/public/web/WebAXObject.h	(revision 177902)
+++ third_party/WebKit/public/web/WebAXObject.h	(working copy)
@@ -36,7 +36,7 @@
 #include "../platform/WebVector.h"
 #include "WebAXEnums.h"
 
-#if BLINK_IMPLEMENTATION
+#if INSIDE_BLINK
 namespace WTF { template <typename T> class PassRefPtr; }
 #endif
 
@@ -216,7 +216,7 @@
     // Scroll this object to a given point in global coordinates of the top-level window.
     BLINK_EXPORT void scrollToGlobalPoint(const WebPoint&) const;
 
-#if BLINK_IMPLEMENTATION
+#if INSIDE_BLINK
     WebAXObject(const WTF::PassRefPtr<WebCore::AXObject>&);
     WebAXObject& operator=(const WTF::PassRefPtr<WebCore::AXObject>&);
     operator WTF::PassRefPtr<WebCore::AXObject>() const;
Index: third_party/WebKit/public/web/WebArrayBufferView.h
===================================================================
--- third_party/WebKit/public/web/WebArrayBufferView.h	(revision 177902)
+++ third_party/WebKit/public/web/WebArrayBufferView.h	(working copy)
@@ -57,7 +57,7 @@
 
     BLINK_EXPORT static WebArrayBufferView* createFromV8Value(v8::Handle<v8::Value>);
 
-#if BLINK_IMPLEMENTATION
+#if INSIDE_BLINK
     WebArrayBufferView(const WTF::PassRefPtr<WTF::ArrayBufferView>&);
     WebArrayBufferView& operator=(const WTF::PassRefPtr<WTF::ArrayBufferView>&);
     operator WTF::PassRefPtr<WTF::ArrayBufferView>() const;
Index: third_party/WebKit/public/web/WebAutocompleteParams.h
===================================================================
--- third_party/WebKit/public/web/WebAutocompleteParams.h	(revision 177902)
+++ third_party/WebKit/public/web/WebAutocompleteParams.h	(working copy)
@@ -33,7 +33,7 @@
 
 #include "public/platform/WebString.h"
 
-#if BLINK_IMPLEMENTATION
+#if INSIDE_BLINK
 namespace WebCore {
 class Dictionary;
 }
@@ -49,7 +49,7 @@
     WebAutocompleteParams()
         : transactionAmount(0) { }
 
-#if BLINK_IMPLEMENTATION
+#if INSIDE_BLINK
     WebAutocompleteParams(const WebCore::Dictionary&);
 #endif
 };
Index: third_party/WebKit/public/web/WebBlob.h
===================================================================
--- third_party/WebKit/public/web/WebBlob.h	(revision 177902)
+++ third_party/WebKit/public/web/WebBlob.h	(working copy)
@@ -37,7 +37,7 @@
 #include "public/platform/WebString.h"
 #include "public/platform/WebURL.h"
 
-#if BLINK_IMPLEMENTATION
+#if INSIDE_BLINK
 #include "platform/heap/Handle.h"
 #endif
 
@@ -74,7 +74,7 @@
 
     BLINK_EXPORT v8::Handle<v8::Value>  toV8Value();
 
-#if BLINK_IMPLEMENTATION
+#if INSIDE_BLINK
     explicit WebBlob(const PassRefPtrWillBeRawPtr<WebCore::Blob>&);
     WebBlob& operator=(const PassRefPtrWillBeRawPtr<WebCore::Blob>&);
 #endif
Index: third_party/WebKit/public/web/WebCachedURLRequest.h
===================================================================
--- third_party/WebKit/public/web/WebCachedURLRequest.h	(revision 177902)
+++ third_party/WebKit/public/web/WebCachedURLRequest.h	(working copy)
@@ -53,7 +53,7 @@
     BLINK_EXPORT bool forPreload() const;
     BLINK_EXPORT WebString initiatorName() const;
 
-#if BLINK_IMPLEMENTATION
+#if INSIDE_BLINK
     explicit WebCachedURLRequest(WebCore::FetchRequest*);
 #endif
 
Index: third_party/WebKit/public/web/WebColorSuggestion.h
===================================================================
--- third_party/WebKit/public/web/WebColorSuggestion.h	(revision 177902)
+++ third_party/WebKit/public/web/WebColorSuggestion.h	(working copy)
@@ -44,7 +44,7 @@
     WebColor color;
     WebString label;
 
-#if BLINK_IMPLEMENTATION
+#if INSIDE_BLINK
     WebColorSuggestion(const WebCore::ColorSuggestion&);
     WebColorSuggestion& operator=(const WebCore::ColorSuggestion&);
 #endif
Index: third_party/WebKit/public/web/WebDOMError.h
===================================================================
--- third_party/WebKit/public/web/WebDOMError.h	(revision 177902)
+++ third_party/WebKit/public/web/WebDOMError.h	(working copy)
@@ -66,7 +66,7 @@
 
     BLINK_EXPORT v8::Handle<v8::Value> toV8Value();
 
-#if BLINK_IMPLEMENTATION
+#if INSIDE_BLINK
     explicit WebDOMError(const PassRefPtrWillBeRawPtr<WebCore::DOMError>&);
     WebDOMError& operator=(const PassRefPtrWillBeRawPtr<WebCore::DOMError>&);
 #endif
Index: third_party/WebKit/public/web/WebDOMEvent.h
===================================================================
--- third_party/WebKit/public/web/WebDOMEvent.h	(revision 177902)
+++ third_party/WebKit/public/web/WebDOMEvent.h	(working copy)
@@ -37,7 +37,7 @@
 #include "WebNode.h"
 
 namespace WebCore { class Event; }
-#if BLINK_IMPLEMENTATION
+#if INSIDE_BLINK
 namespace WTF { template <typename T> class PassRefPtr; }
 #endif
 
@@ -91,7 +91,7 @@
     BLINK_EXPORT bool isProgressEvent() const;
     BLINK_EXPORT bool isXMLHttpRequestProgressEvent() const;
 
-#if BLINK_IMPLEMENTATION
+#if INSIDE_BLINK
     WebDOMEvent(const PassRefPtrWillBeRawPtr<WebCore::Event>&);
     operator PassRefPtrWillBeRawPtr<WebCore::Event>() const;
 #endif
@@ -111,7 +111,7 @@
     }
 
 protected:
-#if BLINK_IMPLEMENTATION
+#if INSIDE_BLINK
     void assign(const PassRefPtrWillBeRawPtr<WebCore::Event>&);
 
     template<typename T> T* unwrap()
Index: third_party/WebKit/public/web/WebDOMEventListener.h
===================================================================
--- third_party/WebKit/public/web/WebDOMEventListener.h	(revision 177902)
+++ third_party/WebKit/public/web/WebDOMEventListener.h	(working copy)
@@ -33,7 +33,7 @@
 
 #include "../platform/WebCommon.h"
 
-#if BLINK_IMPLEMENTATION
+#if INSIDE_BLINK
 namespace WebCore { class EventTarget; }
 #endif
 
@@ -53,7 +53,7 @@
     // Called when an event is received.
     virtual void handleEvent(const WebDOMEvent&) = 0;
 
-#if BLINK_IMPLEMENTATION
+#if INSIDE_BLINK
     void notifyEventListenerDeleted(EventListenerWrapper*);
     EventListenerWrapper* createEventListenerWrapper(const WebString& eventType, bool useCapture, WebCore::EventTarget*);
     EventListenerWrapper* getEventListenerWrapper(const WebString& eventType, bool useCapture, WebCore::EventTarget*);
Index: third_party/WebKit/public/web/WebDOMFileSystem.h
===================================================================
--- third_party/WebKit/public/web/WebDOMFileSystem.h	(revision 177902)
+++ third_party/WebKit/public/web/WebDOMFileSystem.h	(working copy)
@@ -37,7 +37,7 @@
 #include "../platform/WebURL.h"
 #include "WebFrame.h"
 
-#if BLINK_IMPLEMENTATION
+#if INSIDE_BLINK
 #include "platform/heap/Handle.h"
 #endif
 
@@ -96,7 +96,7 @@
 
     bool isNull() const { return m_private.isNull(); }
 
-#if BLINK_IMPLEMENTATION
+#if INSIDE_BLINK
     WebDOMFileSystem(const PassRefPtrWillBeRawPtr<WebCore::DOMFileSystem>&);
     WebDOMFileSystem& operator=(const PassRefPtrWillBeRawPtr<WebCore::DOMFileSystem>&);
 #endif
Index: third_party/WebKit/public/web/WebDOMMediaStreamTrack.h
===================================================================
--- third_party/WebKit/public/web/WebDOMMediaStreamTrack.h	(revision 177902)
+++ third_party/WebKit/public/web/WebDOMMediaStreamTrack.h	(working copy)
@@ -34,7 +34,7 @@
 #include "public/platform/WebMediaStreamTrack.h"
 #include "public/platform/WebPrivatePtr.h"
 
-#if BLINK_IMPLEMENTATION
+#if INSIDE_BLINK
 #include "wtf/PassRefPtr.h"
 #endif
 
@@ -67,7 +67,7 @@
     BLINK_EXPORT WebMediaStreamTrack component() const;
 
 private:
-#if BLINK_IMPLEMENTATION
+#if INSIDE_BLINK
     WebDOMMediaStreamTrack(WTF::PassRefPtr<WebCore::MediaStreamTrack>);
 #endif
 
Index: third_party/WebKit/public/web/WebDOMMessageEvent.h
===================================================================
--- third_party/WebKit/public/web/WebDOMMessageEvent.h	(revision 177902)
+++ third_party/WebKit/public/web/WebDOMMessageEvent.h	(working copy)
@@ -34,7 +34,7 @@
 #include "WebDOMEvent.h"
 #include "WebSerializedScriptValue.h"
 
-#if BLINK_IMPLEMENTATION
+#if INSIDE_BLINK
 #include "core/events/Event.h"
 #include "core/events/MessageEvent.h"
 #endif
@@ -54,7 +54,7 @@
 
     BLINK_EXPORT WebMessagePortChannelArray releaseChannels();
 
-#if BLINK_IMPLEMENTATION
+#if INSIDE_BLINK
     explicit WebDOMMessageEvent(const PassRefPtrWillBeRawPtr<WebCore::MessageEvent>& e) : WebDOMEvent(e) { }
 #endif
 };
Index: third_party/WebKit/public/web/WebDOMMouseEvent.h
===================================================================
--- third_party/WebKit/public/web/WebDOMMouseEvent.h	(revision 177902)
+++ third_party/WebKit/public/web/WebDOMMouseEvent.h	(working copy)
@@ -32,7 +32,7 @@
 
 #include "WebDOMEvent.h"
 
-#if BLINK_IMPLEMENTATION
+#if INSIDE_BLINK
 namespace WebCore { class Event; }
 #endif
 
Index: third_party/WebKit/public/web/WebDatabase.h
===================================================================
--- third_party/WebKit/public/web/WebDatabase.h	(revision 177902)
+++ third_party/WebKit/public/web/WebDatabase.h	(working copy)
@@ -58,7 +58,7 @@
     BLINK_EXPORT static void closeDatabaseImmediately(
         const WebString& originIdentifier, const WebString& databaseName);
 
-#if BLINK_IMPLEMENTATION
+#if INSIDE_BLINK
     WebDatabase(const WebCore::DatabaseBackendBase*);
 #endif
 
Index: third_party/WebKit/public/web/WebDateTimeSuggestion.h
===================================================================
--- third_party/WebKit/public/web/WebDateTimeSuggestion.h	(revision 177902)
+++ third_party/WebKit/public/web/WebDateTimeSuggestion.h	(working copy)
@@ -28,7 +28,7 @@
 
 #include "public/platform/WebString.h"
 
-#if BLINK_IMPLEMENTATION
+#if INSIDE_BLINK
 namespace WebCore { struct DateTimeSuggestion; }
 #endif
 
@@ -41,7 +41,7 @@
 
     WebDateTimeSuggestion() { }
 
-#if BLINK_IMPLEMENTATION
+#if INSIDE_BLINK
     WebDateTimeSuggestion(const WebCore::DateTimeSuggestion&);
     WebDateTimeSuggestion& operator=(const WebCore::DateTimeSuggestion&);
 #endif
Index: third_party/WebKit/public/web/WebDocument.h
===================================================================
--- third_party/WebKit/public/web/WebDocument.h	(revision 177902)
+++ third_party/WebKit/public/web/WebDocument.h	(working copy)
@@ -39,7 +39,7 @@
 #include "WebNode.h"
 #include "WebSecurityOrigin.h"
 
-#if BLINK_IMPLEMENTATION
+#if INSIDE_BLINK
 namespace WebCore {
 class Document;
 class DocumentType;
@@ -136,7 +136,7 @@
 
     BLINK_EXPORT v8::Handle<v8::Value> registerEmbedderCustomElement(const WebString& name, v8::Handle<v8::Value> options, WebExceptionCode&);
 
-#if BLINK_IMPLEMENTATION
+#if INSIDE_BLINK
     WebDocument(const PassRefPtrWillBeRawPtr<WebCore::Document>&);
     WebDocument& operator=(const PassRefPtrWillBeRawPtr<WebCore::Document>&);
     operator PassRefPtrWillBeRawPtr<WebCore::Document>() const;
Index: third_party/WebKit/public/web/WebDocumentType.h
===================================================================
--- third_party/WebKit/public/web/WebDocumentType.h	(revision 177902)
+++ third_party/WebKit/public/web/WebDocumentType.h	(working copy)
@@ -33,7 +33,7 @@
 
 #include "WebNode.h"
 
-#if BLINK_IMPLEMENTATION
+#if INSIDE_BLINK
 namespace WebCore { class DocumentType; }
 namespace WTF { template <typename T> class PassRefPtr; }
 #endif
@@ -56,7 +56,7 @@
 
     BLINK_EXPORT WebString name() const;
 
-#if BLINK_IMPLEMENTATION
+#if INSIDE_BLINK
     WebDocumentType(const PassRefPtrWillBeRawPtr<WebCore::DocumentType>&);
     WebDocumentType& operator=(const PassRefPtrWillBeRawPtr<WebCore::DocumentType>&);
     operator PassRefPtrWillBeRawPtr<WebCore::DocumentType>() const;
Index: third_party/WebKit/public/web/WebElement.h
===================================================================
--- third_party/WebKit/public/web/WebElement.h	(revision 177902)
+++ third_party/WebKit/public/web/WebElement.h	(working copy)
@@ -34,7 +34,7 @@
 #include "../platform/WebImage.h"
 #include "WebNode.h"
 
-#if BLINK_IMPLEMENTATION
+#if INSIDE_BLINK
 namespace WebCore { class Element; }
 #endif
 
@@ -88,7 +88,7 @@
         // if there isn't any.
         BLINK_EXPORT WebImage imageContents();
 
-#if BLINK_IMPLEMENTATION
+#if INSIDE_BLINK
         WebElement(const PassRefPtrWillBeRawPtr<WebCore::Element>&);
         WebElement& operator=(const PassRefPtrWillBeRawPtr<WebCore::Element>&);
         operator PassRefPtrWillBeRawPtr<WebCore::Element>() const;
Index: third_party/WebKit/public/web/WebElementCollection.h
===================================================================
--- third_party/WebKit/public/web/WebElementCollection.h	(revision 177902)
+++ third_party/WebKit/public/web/WebElementCollection.h	(working copy)
@@ -35,7 +35,7 @@
 #include "../platform/WebCommon.h"
 
 namespace WebCore { class HTMLCollection; }
-#if BLINK_IMPLEMENTATION
+#if INSIDE_BLINK
 namespace WTF { template <typename T> class PassRefPtr; }
 #endif
 
@@ -64,7 +64,7 @@
     BLINK_EXPORT WebElement nextItem() const;
     BLINK_EXPORT WebElement firstItem() const;
 
-#if BLINK_IMPLEMENTATION
+#if INSIDE_BLINK
     WebElementCollection(const WTF::PassRefPtr<WebCore::HTMLCollection>&);
 #endif
 
Index: third_party/WebKit/public/web/WebFontDescription.h
===================================================================
--- third_party/WebKit/public/web/WebFontDescription.h	(revision 177902)
+++ third_party/WebKit/public/web/WebFontDescription.h	(working copy)
@@ -33,7 +33,7 @@
 
 #include "../platform/WebString.h"
 
-#if BLINK_IMPLEMENTATION
+#if INSIDE_BLINK
 namespace WebCore { class FontDescription; }
 #endif
 
@@ -94,7 +94,7 @@
     short letterSpacing;
     short wordSpacing;
 
-#if BLINK_IMPLEMENTATION
+#if INSIDE_BLINK
     WebFontDescription(const WebCore::FontDescription&);
 
     operator WebCore::FontDescription() const;
Index: third_party/WebKit/public/web/WebFormControlElement.h
===================================================================
--- third_party/WebKit/public/web/WebFormControlElement.h	(revision 177902)
+++ third_party/WebKit/public/web/WebFormControlElement.h	(working copy)
@@ -35,7 +35,7 @@
 #include "WebElement.h"
 #include "WebFormElement.h"
 
-#if BLINK_IMPLEMENTATION
+#if INSIDE_BLINK
 namespace WebCore { class HTMLFormControlElement; }
 #endif
 
@@ -115,7 +115,7 @@
 
     BLINK_EXPORT WebFormElement form() const;
 
-#if BLINK_IMPLEMENTATION
+#if INSIDE_BLINK
     WebFormControlElement(const PassRefPtrWillBeRawPtr<WebCore::HTMLFormControlElement>&);
     WebFormControlElement& operator=(const PassRefPtrWillBeRawPtr<WebCore::HTMLFormControlElement>&);
     operator PassRefPtrWillBeRawPtr<WebCore::HTMLFormControlElement>() const;
Index: third_party/WebKit/public/web/WebFormElement.h
===================================================================
--- third_party/WebKit/public/web/WebFormElement.h	(revision 177902)
+++ third_party/WebKit/public/web/WebFormElement.h	(working copy)
@@ -34,7 +34,7 @@
 #include "../platform/WebVector.h"
 #include "WebElement.h"
 
-#if BLINK_IMPLEMENTATION
+#if INSIDE_BLINK
 namespace WebCore { class HTMLFormElement; }
 #endif
 
@@ -80,7 +80,7 @@
         };
         BLINK_EXPORT void finishRequestAutocomplete(WebFormElement::AutocompleteResult);
 
-#if BLINK_IMPLEMENTATION
+#if INSIDE_BLINK
         WebFormElement(const PassRefPtrWillBeRawPtr<WebCore::HTMLFormElement>&);
         WebFormElement& operator=(const PassRefPtrWillBeRawPtr<WebCore::HTMLFormElement>&);
         operator PassRefPtrWillBeRawPtr<WebCore::HTMLFormElement>() const;
Index: third_party/WebKit/public/web/WebGeolocationController.h
===================================================================
--- third_party/WebKit/public/web/WebGeolocationController.h	(revision 177902)
+++ third_party/WebKit/public/web/WebGeolocationController.h	(working copy)
@@ -43,7 +43,7 @@
     BLINK_EXPORT void positionChanged(const WebGeolocationPosition&);
     BLINK_EXPORT void errorOccurred(const WebGeolocationError&);
 
-#if BLINK_IMPLEMENTATION
+#if INSIDE_BLINK
     WebGeolocationController(WebCore::GeolocationController* c)
         : m_private(c)
     {
Index: third_party/WebKit/public/web/WebGeolocationError.h
===================================================================
--- third_party/WebKit/public/web/WebGeolocationError.h	(revision 177902)
+++ third_party/WebKit/public/web/WebGeolocationError.h	(working copy)
@@ -29,7 +29,7 @@
 #include "../platform/WebCommon.h"
 #include "../platform/WebPrivatePtr.h"
 
-#if BLINK_IMPLEMENTATION
+#if INSIDE_BLINK
 #include "wtf/PassRefPtr.h"
 #endif
 
@@ -54,7 +54,7 @@
     BLINK_EXPORT void assign(const WebGeolocationError&);
     BLINK_EXPORT void reset();
 
-#if BLINK_IMPLEMENTATION
+#if INSIDE_BLINK
     WebGeolocationError(PassRefPtrWillBeRawPtr<WebCore::GeolocationError>);
     WebGeolocationError& operator=(PassRefPtrWillBeRawPtr<WebCore::GeolocationError>);
     operator PassRefPtrWillBeRawPtr<WebCore::GeolocationError>() const;
Index: third_party/WebKit/public/web/WebGeolocationPermissionRequest.h
===================================================================
--- third_party/WebKit/public/web/WebGeolocationPermissionRequest.h	(revision 177902)
+++ third_party/WebKit/public/web/WebGeolocationPermissionRequest.h	(working copy)
@@ -46,7 +46,7 @@
     BLINK_EXPORT WebSecurityOrigin securityOrigin() const;
     BLINK_EXPORT void setIsAllowed(bool);
 
-#if BLINK_IMPLEMENTATION
+#if INSIDE_BLINK
     WebGeolocationPermissionRequest(WebCore::Geolocation* geolocation)
         : m_private(geolocation)
     {
Index: third_party/WebKit/public/web/WebGeolocationPosition.h
===================================================================
--- third_party/WebKit/public/web/WebGeolocationPosition.h	(revision 177902)
+++ third_party/WebKit/public/web/WebGeolocationPosition.h	(working copy)
@@ -29,7 +29,7 @@
 #include "../platform/WebCommon.h"
 #include "../platform/WebPrivatePtr.h"
 
-#if BLINK_IMPLEMENTATION
+#if INSIDE_BLINK
 #include "wtf/PassRefPtr.h"
 #endif
 
@@ -51,7 +51,7 @@
     BLINK_EXPORT void assign(const WebGeolocationPosition&);
     BLINK_EXPORT void reset();
 
-#if BLINK_IMPLEMENTATION
+#if INSIDE_BLINK
     WebGeolocationPosition(PassRefPtrWillBeRawPtr<WebCore::GeolocationPosition>);
     WebGeolocationPosition& operator=(PassRefPtrWillBeRawPtr<WebCore::GeolocationPosition>);
     operator PassRefPtrWillBeRawPtr<WebCore::GeolocationPosition>() const;
Index: third_party/WebKit/public/web/WebHistoryItem.h
===================================================================
--- third_party/WebKit/public/web/WebHistoryItem.h	(revision 177902)
+++ third_party/WebKit/public/web/WebHistoryItem.h	(working copy)
@@ -112,7 +112,7 @@
 
     BLINK_EXPORT WebVector<WebString> getReferencedFilePaths() const;
 
-#if BLINK_IMPLEMENTATION
+#if INSIDE_BLINK
     WebHistoryItem(const WTF::PassRefPtr<WebCore::HistoryItem>&);
     WebHistoryItem& operator=(const WTF::PassRefPtr<WebCore::HistoryItem>&);
     operator WTF::PassRefPtr<WebCore::HistoryItem>() const;
Index: third_party/WebKit/public/web/WebHitTestResult.h
===================================================================
--- third_party/WebKit/public/web/WebHitTestResult.h	(revision 177902)
+++ third_party/WebKit/public/web/WebHitTestResult.h	(working copy)
@@ -71,7 +71,7 @@
     // Return whether an editable input element was hit.
     BLINK_EXPORT bool isContentEditable() const;
 
-#if BLINK_IMPLEMENTATION
+#if INSIDE_BLINK
     WebHitTestResult(const WebCore::HitTestResult&);
     WebHitTestResult& operator=(const WebCore::HitTestResult&);
     operator WebCore::HitTestResult() const;
Index: third_party/WebKit/public/web/WebIconURL.h
===================================================================
--- third_party/WebKit/public/web/WebIconURL.h	(revision 177902)
+++ third_party/WebKit/public/web/WebIconURL.h	(working copy)
@@ -31,7 +31,7 @@
 #ifndef WebIconURL_h
 #define WebIconURL_h
 
-#if BLINK_IMPLEMENTATION
+#if INSIDE_BLINK
 #include "core/dom/IconURL.h"
 #endif
 #include "public/platform/WebSize.h"
@@ -75,7 +75,7 @@
         return m_sizes;
     }
 
-#if BLINK_IMPLEMENTATION
+#if INSIDE_BLINK
     WebIconURL(const WebCore::IconURL& iconURL)
         : m_iconType(static_cast<Type>(iconURL.m_iconType))
         , m_iconURL(iconURL.m_iconURL)
Index: third_party/WebKit/public/web/WebInputElement.h
===================================================================
--- third_party/WebKit/public/web/WebInputElement.h	(revision 177902)
+++ third_party/WebKit/public/web/WebInputElement.h	(working copy)
@@ -33,7 +33,7 @@
 
 #include "WebFormControlElement.h"
 
-#if BLINK_IMPLEMENTATION
+#if INSIDE_BLINK
 namespace WebCore { class HTMLInputElement; }
 #endif
 
@@ -89,7 +89,7 @@
         // If true, forces the text of the element to be visible.
         BLINK_EXPORT void setShouldRevealPassword(bool value);
 
-#if BLINK_IMPLEMENTATION
+#if INSIDE_BLINK
         WebInputElement(const PassRefPtrWillBeRawPtr<WebCore::HTMLInputElement>&);
         WebInputElement& operator=(const PassRefPtrWillBeRawPtr<WebCore::HTMLInputElement>&);
         operator PassRefPtrWillBeRawPtr<WebCore::HTMLInputElement>() const;
Index: third_party/WebKit/public/web/WebLabelElement.h
===================================================================
--- third_party/WebKit/public/web/WebLabelElement.h	(revision 177902)
+++ third_party/WebKit/public/web/WebLabelElement.h	(working copy)
@@ -33,7 +33,7 @@
 
 #include "WebElement.h"
 
-#if BLINK_IMPLEMENTATION
+#if INSIDE_BLINK
 namespace WebCore { class HTMLLabelElement; }
 namespace WTF { template <typename T> class PassRefPtr; }
 #endif
@@ -56,7 +56,7 @@
 
     BLINK_EXPORT WebElement correspondingControl();
 
-#if BLINK_IMPLEMENTATION
+#if INSIDE_BLINK
     WebLabelElement(const PassRefPtrWillBeRawPtr<WebCore::HTMLLabelElement>&);
     WebLabelElement& operator=(const PassRefPtrWillBeRawPtr<WebCore::HTMLLabelElement>&);
     operator PassRefPtrWillBeRawPtr<WebCore::HTMLLabelElement>() const;
Index: third_party/WebKit/public/web/WebMIDIPermissionRequest.h
===================================================================
--- third_party/WebKit/public/web/WebMIDIPermissionRequest.h	(revision 177902)
+++ third_party/WebKit/public/web/WebMIDIPermissionRequest.h	(working copy)
@@ -59,7 +59,7 @@
     BLINK_EXPORT void assign(const WebMIDIPermissionRequest&);
     BLINK_EXPORT bool equals(const WebMIDIPermissionRequest&) const;
 
-#if BLINK_IMPLEMENTATION
+#if INSIDE_BLINK
     explicit WebMIDIPermissionRequest(const PassRefPtrWillBeRawPtr<WebCore::MIDIAccess>&);
 
     WebCore::MIDIAccess* midiAccess() const { return m_private.get(); }
Index: third_party/WebKit/public/web/WebMediaDevicesRequest.h
===================================================================
--- third_party/WebKit/public/web/WebMediaDevicesRequest.h	(revision 177902)
+++ third_party/WebKit/public/web/WebMediaDevicesRequest.h	(working copy)
@@ -62,7 +62,7 @@
 
     BLINK_EXPORT void requestSucceeded(WebVector<WebMediaDeviceInfo>);
 
-#if BLINK_IMPLEMENTATION
+#if INSIDE_BLINK
     WebMediaDevicesRequest(const PassRefPtr<WebCore::MediaDevicesRequest>&);
     WebMediaDevicesRequest(WebCore::MediaDevicesRequest*);
     operator WebCore::MediaDevicesRequest*() const;
Index: third_party/WebKit/public/web/WebNode.h
===================================================================
--- third_party/WebKit/public/web/WebNode.h	(revision 177902)
+++ third_party/WebKit/public/web/WebNode.h	(working copy)
@@ -140,13 +140,13 @@
         return res;
     }
 
-#if BLINK_IMPLEMENTATION
+#if INSIDE_BLINK
     WebNode(const PassRefPtrWillBeRawPtr<WebCore::Node>&);
     WebNode& operator=(const PassRefPtrWillBeRawPtr<WebCore::Node>&);
     operator PassRefPtrWillBeRawPtr<WebCore::Node>() const;
 #endif
 
-#if BLINK_IMPLEMENTATION
+#if INSIDE_BLINK
     template<typename T> T* unwrap()
     {
         return static_cast<T*>(m_private.get());
Index: third_party/WebKit/public/web/WebNodeList.h
===================================================================
--- third_party/WebKit/public/web/WebNodeList.h	(revision 177902)
+++ third_party/WebKit/public/web/WebNodeList.h	(working copy)
@@ -34,7 +34,7 @@
 #include "../platform/WebCommon.h"
 
 namespace WebCore { class NodeList; }
-#if BLINK_IMPLEMENTATION
+#if INSIDE_BLINK
 namespace WTF { template <typename T> class PassRefPtr; }
 #endif
 
@@ -60,7 +60,7 @@
     BLINK_EXPORT unsigned length() const;
     BLINK_EXPORT WebNode item(size_t) const;
 
-#if BLINK_IMPLEMENTATION
+#if INSIDE_BLINK
     WebNodeList(const WTF::PassRefPtr<WebCore::NodeList>&);
 #endif
 
Index: third_party/WebKit/public/web/WebNotification.h
===================================================================
--- third_party/WebKit/public/web/WebNotification.h	(revision 177902)
+++ third_party/WebKit/public/web/WebNotification.h	(working copy)
@@ -38,7 +38,7 @@
 
 namespace WebCore { class Notification; }
 
-#if BLINK_IMPLEMENTATION
+#if INSIDE_BLINK
 namespace WTF { template <typename T> class PassRefPtr; }
 #endif
 
@@ -92,7 +92,7 @@
     WebString replaceId() const { return tag(); }
     void dispatchDisplayEvent() { dispatchShowEvent(); }
 
-#if BLINK_IMPLEMENTATION
+#if INSIDE_BLINK
     WebNotification(const WTF::PassRefPtr<WebCore::Notification>&);
     WebNotification& operator=(const WTF::PassRefPtr<WebCore::Notification>&);
     operator WTF::PassRefPtr<WebCore::Notification>() const;
Index: third_party/WebKit/public/web/WebOptionElement.h
===================================================================
--- third_party/WebKit/public/web/WebOptionElement.h	(revision 177902)
+++ third_party/WebKit/public/web/WebOptionElement.h	(working copy)
@@ -34,7 +34,7 @@
 #include "../platform/WebVector.h"
 #include "WebElement.h"
 
-#if BLINK_IMPLEMENTATION
+#if INSIDE_BLINK
 namespace WebCore { class HTMLOptionElement; }
 #endif
 
@@ -61,7 +61,7 @@
     BLINK_EXPORT WebString label() const;
     BLINK_EXPORT bool isEnabled() const;
 
-#if BLINK_IMPLEMENTATION
+#if INSIDE_BLINK
     WebOptionElement(const PassRefPtrWillBeRawPtr<WebCore::HTMLOptionElement>&);
     WebOptionElement& operator=(const PassRefPtrWillBeRawPtr<WebCore::HTMLOptionElement>&);
     operator PassRefPtrWillBeRawPtr<WebCore::HTMLOptionElement>() const;
Index: third_party/WebKit/public/web/WebPerformance.h
===================================================================
--- third_party/WebKit/public/web/WebPerformance.h	(revision 177902)
+++ third_party/WebKit/public/web/WebPerformance.h	(working copy)
@@ -35,7 +35,7 @@
 #include "../platform/WebPrivatePtr.h"
 #include "WebNavigationType.h"
 
-#if BLINK_IMPLEMENTATION
+#if INSIDE_BLINK
 #include "platform/heap/Handle.h"
 #endif
 
@@ -85,7 +85,7 @@
     BLINK_EXPORT double loadEventStart() const;
     BLINK_EXPORT double loadEventEnd() const;
 
-#if BLINK_IMPLEMENTATION
+#if INSIDE_BLINK
     WebPerformance(const PassRefPtrWillBeRawPtr<WebCore::Performance>&);
     WebPerformance& operator=(const PassRefPtrWillBeRawPtr<WebCore::Performance>&);
 #endif
Index: third_party/WebKit/public/web/WebPluginDocument.h
===================================================================
--- third_party/WebKit/public/web/WebPluginDocument.h	(revision 177902)
+++ third_party/WebKit/public/web/WebPluginDocument.h	(working copy)
@@ -33,7 +33,7 @@
 
 #include "WebDocument.h"
 
-#if BLINK_IMPLEMENTATION
+#if INSIDE_BLINK
 namespace WebCore { class PluginDocument; }
 #endif
 
@@ -55,7 +55,7 @@
 
     BLINK_EXPORT WebPlugin* plugin();
 
-#if BLINK_IMPLEMENTATION
+#if INSIDE_BLINK
     WebPluginDocument(const PassRefPtrWillBeRawPtr<WebCore::PluginDocument>&);
     WebPluginDocument& operator=(const PassRefPtrWillBeRawPtr<WebCore::PluginDocument>&);
     operator PassRefPtrWillBeRawPtr<WebCore::PluginDocument>() const;
Index: third_party/WebKit/public/web/WebRange.h
===================================================================
--- third_party/WebKit/public/web/WebRange.h	(revision 177902)
+++ third_party/WebKit/public/web/WebRange.h	(working copy)
@@ -76,7 +76,7 @@
 
     BLINK_EXPORT WebVector<WebFloatQuad> textQuads() const;
 
-#if BLINK_IMPLEMENTATION
+#if INSIDE_BLINK
     WebRange(const PassRefPtrWillBeRawPtr<WebCore::Range>&);
     operator PassRefPtrWillBeRawPtr<WebCore::Range>() const;
 #endif
Index: third_party/WebKit/public/web/WebSecurityOrigin.h
===================================================================
--- third_party/WebKit/public/web/WebSecurityOrigin.h	(revision 177902)
+++ third_party/WebKit/public/web/WebSecurityOrigin.h	(working copy)
@@ -33,7 +33,7 @@
 
 #include "../platform/WebCommon.h"
 
-#if BLINK_IMPLEMENTATION
+#if INSIDE_BLINK
 namespace WebCore { class SecurityOrigin; }
 namespace WTF { template <typename T> class PassRefPtr; }
 #endif
@@ -99,7 +99,7 @@
     // Allows this WebSecurityOrigin access to local resources.
     BLINK_EXPORT void grantLoadLocalResources() const;
 
-#if BLINK_IMPLEMENTATION
+#if INSIDE_BLINK
     WebSecurityOrigin(const WTF::PassRefPtr<WebCore::SecurityOrigin>&);
     WebSecurityOrigin& operator=(const WTF::PassRefPtr<WebCore::SecurityOrigin>&);
     operator WTF::PassRefPtr<WebCore::SecurityOrigin>() const;
Index: third_party/WebKit/public/web/WebSelectElement.h
===================================================================
--- third_party/WebKit/public/web/WebSelectElement.h	(revision 177902)
+++ third_party/WebKit/public/web/WebSelectElement.h	(working copy)
@@ -35,7 +35,7 @@
 #include "WebFormControlElement.h"
 #include "WebOptionElement.h"
 
-#if BLINK_IMPLEMENTATION
+#if INSIDE_BLINK
 namespace WebCore { class HTMLSelectElement; }
 #endif
 
@@ -56,7 +56,7 @@
 
     BLINK_EXPORT WebVector<WebElement> listItems() const;
 
-#if BLINK_IMPLEMENTATION
+#if INSIDE_BLINK
     WebSelectElement(const PassRefPtrWillBeRawPtr<WebCore::HTMLSelectElement>&);
     WebSelectElement& operator=(const PassRefPtrWillBeRawPtr<WebCore::HTMLSelectElement>&);
     operator PassRefPtrWillBeRawPtr<WebCore::HTMLSelectElement>() const;
Index: third_party/WebKit/public/web/WebSerializedScriptValue.h
===================================================================
--- third_party/WebKit/public/web/WebSerializedScriptValue.h	(revision 177902)
+++ third_party/WebKit/public/web/WebSerializedScriptValue.h	(working copy)
@@ -75,7 +75,7 @@
     // Convert the serialized value to a parsed v8 value.
     BLINK_EXPORT v8::Handle<v8::Value> deserialize();
 
-#if BLINK_IMPLEMENTATION
+#if INSIDE_BLINK
     WebSerializedScriptValue(const WTF::PassRefPtr<WebCore::SerializedScriptValue>&);
     WebSerializedScriptValue& operator=(const WTF::PassRefPtr<WebCore::SerializedScriptValue>&);
     operator WTF::PassRefPtr<WebCore::SerializedScriptValue>() const;
Index: third_party/WebKit/public/web/WebSpeechGrammar.h
===================================================================
--- third_party/WebKit/public/web/WebSpeechGrammar.h	(revision 177902)
+++ third_party/WebKit/public/web/WebSpeechGrammar.h	(working copy)
@@ -48,7 +48,7 @@
     BLINK_EXPORT void reset();
     BLINK_EXPORT void assign(const WebSpeechGrammar&);
 
-#if BLINK_IMPLEMENTATION
+#if INSIDE_BLINK
     explicit WebSpeechGrammar(const PassRefPtrWillBeRawPtr<WebCore::SpeechGrammar>&);
     WebSpeechGrammar& operator=(const PassRefPtrWillBeRawPtr<WebCore::SpeechGrammar>&);
 #endif
Index: third_party/WebKit/public/web/WebSpeechRecognitionHandle.h
===================================================================
--- third_party/WebKit/public/web/WebSpeechRecognitionHandle.h	(revision 177902)
+++ third_party/WebKit/public/web/WebSpeechRecognitionHandle.h	(working copy)
@@ -61,7 +61,7 @@
     BLINK_EXPORT bool equals(const WebSpeechRecognitionHandle&) const;
     BLINK_EXPORT bool lessThan(const WebSpeechRecognitionHandle&) const;
 
-#if BLINK_IMPLEMENTATION
+#if INSIDE_BLINK
     explicit WebSpeechRecognitionHandle(const PassRefPtrWillBeRawPtr<WebCore::SpeechRecognition>&);
     WebSpeechRecognitionHandle& operator=(const PassRefPtrWillBeRawPtr<WebCore::SpeechRecognition>&);
     operator PassRefPtrWillBeRawPtr<WebCore::SpeechRecognition>() const;
Index: third_party/WebKit/public/web/WebSpeechRecognitionResult.h
===================================================================
--- third_party/WebKit/public/web/WebSpeechRecognitionResult.h	(revision 177902)
+++ third_party/WebKit/public/web/WebSpeechRecognitionResult.h	(working copy)
@@ -47,7 +47,7 @@
     BLINK_EXPORT void assign(const WebSpeechRecognitionResult&);
     BLINK_EXPORT void reset();
 
-#if BLINK_IMPLEMENTATION
+#if INSIDE_BLINK
     operator PassRefPtrWillBeRawPtr<WebCore::SpeechRecognitionResult>() const;
 #endif
 
Index: third_party/WebKit/public/web/WebTextAreaElement.h
===================================================================
--- third_party/WebKit/public/web/WebTextAreaElement.h	(revision 177902)
+++ third_party/WebKit/public/web/WebTextAreaElement.h	(working copy)
@@ -33,7 +33,7 @@
 
 #include "WebFormControlElement.h"
 
-#if BLINK_IMPLEMENTATION
+#if INSIDE_BLINK
 namespace WebCore { class HTMLTextAreaElement; }
 #endif
 
@@ -52,7 +52,7 @@
     }
     void assign(const WebTextAreaElement& element) { WebFormControlElement::assign(element); }
 
-#if BLINK_IMPLEMENTATION
+#if INSIDE_BLINK
     WebTextAreaElement(const PassRefPtrWillBeRawPtr<WebCore::HTMLTextAreaElement>&);
     WebTextAreaElement& operator=(const PassRefPtrWillBeRawPtr<WebCore::HTMLTextAreaElement>&);
     operator PassRefPtrWillBeRawPtr<WebCore::HTMLTextAreaElement>() const;
Index: third_party/WebKit/public/web/WebTextCheckingResult.h
===================================================================
--- third_party/WebKit/public/web/WebTextCheckingResult.h	(revision 177902)
+++ third_party/WebKit/public/web/WebTextCheckingResult.h	(working copy)
@@ -60,7 +60,7 @@
     {
     }
 
-#if BLINK_IMPLEMENTATION
+#if INSIDE_BLINK
     operator WebCore::TextCheckingResult() const;
 #endif
 
Index: third_party/WebKit/public/web/WebTextRun.h
===================================================================
--- third_party/WebKit/public/web/WebTextRun.h	(revision 177902)
+++ third_party/WebKit/public/web/WebTextRun.h	(working copy)
@@ -33,7 +33,7 @@
 
 #include "../platform/WebString.h"
 
-#if BLINK_IMPLEMENTATION
+#if INSIDE_BLINK
 namespace WebCore { class TextRun; }
 #endif
 
@@ -56,7 +56,7 @@
     bool rtl;
     bool directionalOverride;
 
-#if BLINK_IMPLEMENTATION
+#if INSIDE_BLINK
     // The resulting WebCore::TextRun will refer to the text in this
     // struct, so "this" must outlive the WebCore text run.
     operator WebCore::TextRun() const;
Index: third_party/WebKit/public/web/WebUserGestureToken.h
===================================================================
--- third_party/WebKit/public/web/WebUserGestureToken.h	(revision 177902)
+++ third_party/WebKit/public/web/WebUserGestureToken.h	(working copy)
@@ -58,7 +58,7 @@
     BLINK_EXPORT void setJavascriptPrompt();
     bool isNull() const { return m_token.isNull(); }
 
-#if BLINK_IMPLEMENTATION
+#if INSIDE_BLINK
     explicit WebUserGestureToken(PassRefPtr<WebCore::UserGestureToken>);
     operator PassRefPtr<WebCore::UserGestureToken>() const;
 #endif
Index: third_party/WebKit/public/web/WebUserMediaRequest.h
===================================================================
--- third_party/WebKit/public/web/WebUserMediaRequest.h	(revision 177902)
+++ third_party/WebKit/public/web/WebUserMediaRequest.h	(working copy)
@@ -81,7 +81,7 @@
     // DEPRECATED
     BLINK_EXPORT void requestFailed(const WebString& description = WebString()) { requestDenied(description); }
 
-#if BLINK_IMPLEMENTATION
+#if INSIDE_BLINK
     WebUserMediaRequest(const PassRefPtr<WebCore::UserMediaRequest>&);
     WebUserMediaRequest(WebCore::UserMediaRequest*);
     operator WebCore::UserMediaRequest*() const;
Index: third_party/WebKit/public/web/WebWindowFeatures.h
===================================================================
--- third_party/WebKit/public/web/WebWindowFeatures.h	(revision 177902)
+++ third_party/WebKit/public/web/WebWindowFeatures.h	(working copy)
@@ -35,7 +35,7 @@
 #include "../platform/WebString.h"
 #include "../platform/WebVector.h"
 
-#if BLINK_IMPLEMENTATION
+#if INSIDE_BLINK
 #include "core/page/WindowFeatures.h"
 #endif
 
@@ -79,7 +79,7 @@
     }
 
 
-#if BLINK_IMPLEMENTATION
+#if INSIDE_BLINK
     WebWindowFeatures(const WebCore::WindowFeatures& f)
         : x(f.x)
         , xSet(f.xSet)
