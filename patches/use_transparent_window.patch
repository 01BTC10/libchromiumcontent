diff --git a/ui/gl/gpu_switching_manager.cc b/ui/gl/gpu_switching_manager.cc
index 0f87470..d21c721 100644
--- a/ui/gl/gpu_switching_manager.cc
+++ b/ui/gl/gpu_switching_manager.cc
@@ -17,6 +17,12 @@
 
 namespace ui {
 
+namespace {
+
+bool g_use_transparent = false;
+
+} // namespace
+
 struct GpuSwitchingManager::PlatformSpecific {
 #if defined(OS_MACOSX)
   CGLPixelFormatObj discrete_pixel_format;
@@ -28,6 +34,16 @@ GpuSwitchingManager* GpuSwitchingManager::GetInstance() {
   return base::Singleton<GpuSwitchingManager>::get();
 }
 
+// static
+void GpuSwitchingManager::SetTransparent(bool transparent) {
+  g_use_transparent = transparent;
+}
+
+// static
+bool GpuSwitchingManager::UseTransparent() {
+  return g_use_transparent;
+}
+
 GpuSwitchingManager::GpuSwitchingManager()
     : gpu_switching_option_(gfx::PreferIntegratedGpu),
       gpu_switching_option_set_(false),
diff --git a/ui/gl/gpu_switching_manager.h b/ui/gl/gpu_switching_manager.h
index 7849d4a..f75863d 100644
--- a/ui/gl/gpu_switching_manager.h
+++ b/ui/gl/gpu_switching_manager.h
@@ -24,6 +24,9 @@ class GL_EXPORT GpuSwitchingManager {
   // Getter for the singleton. This will return NULL on failure.
   static GpuSwitchingManager* GetInstance();
 
+  static void SetTransparent(bool transparent);
+  static bool UseTransparent();
+
   // Set the switching option to PreferIntegratedGpu.
   void ForceUseOfIntegratedGpu();
   // Set the switching option to PreferDiscreteGpu; switch to discrete GPU
