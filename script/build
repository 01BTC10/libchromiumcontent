#!/usr/bin/env python

import argparse
import os
import subprocess
import sys

from lib.util import get_configuration, get_output_dir


SOURCE_ROOT = os.path.abspath(os.path.dirname(os.path.dirname(__file__)))
VENDOR_DIR = os.path.join(SOURCE_ROOT, 'vendor')
TARGETS = ['chromiumcontent_all']
COMPONENTS = ['static_library', 'shared_library']

NINJA = os.path.join(VENDOR_DIR, 'depot_tools', 'ninja')
if sys.platform == 'win32':
  NINJA = '{0}.exe'.format(NINJA)


def main():
  args = parse_args()
  target_arch = args.target_arch

  os.chdir(SOURCE_ROOT)

  for component in COMPONENTS:
    out_dir = os.path.join(VENDOR_DIR, 'chromium', 'src',
                           get_output_dir(target_arch, component))

    config = get_configuration(target_arch)
    config_dir = os.path.relpath(os.path.join(out_dir, config))
    subprocess.check_call([NINJA, '-C', config_dir] + TARGETS)


def parse_args():
  parser = argparse.ArgumentParser(description='Build libchromiumcontent')
  parser.add_argument('-t', '--target_arch', default='x64', help='x64 or ia32')
  return parser.parse_args()


if __name__ == '__main__':
    sys.exit(main())
